<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Interfaces on Wondrous WindomCard&#39;s Blog</title>
    <link>https://wondrouswisdomcard.gitee.io/tags/interfaces/</link>
    <description>Recent content in Interfaces on Wondrous WindomCard&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This is a customized copyright.</copyright>
    <lastBuildDate>Wed, 14 Oct 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://wondrouswisdomcard.gitee.io/tags/interfaces/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Java - The Learning Experience 3</title>
      <link>https://wondrouswisdomcard.gitee.io/posts/java3/</link>
      <pubDate>Wed, 14 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://wondrouswisdomcard.gitee.io/posts/java3/</guid>
      <description>Interfaces 接口 In its most common form, an interface is a group of related methods with empty bodies. A bicycle&amp;rsquo;s behavior, if specified as an interface, might appear as follows：
interface BicycleInterface { // constant declarations, if any// method signatures void changeCadence(int newValue); void changeGear(int newValue); void speedUp(int increment); void applyBrakes(int decrement); } Interfaces form a contract between the class and the outside world, and this contract is enforced at build time by the compiler.</description>
    </item>
    
  </channel>
</rss>