<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wondrous WindomCard&#39;s Blog</title>
    <link>https://wondrouswisdomcard.gitee.io/</link>
    <description>Recent content on Wondrous WindomCard&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This is a customized copyright.</copyright>
    <lastBuildDate>Sun, 03 Jan 2021 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://wondrouswisdomcard.gitee.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>Index Page Of Homework</title>
        <link>https://wondrouswisdomcard.gitee.io/posts/index0/</link>
        <pubDate>Sun, 03 Jan 2021 00:00:00 +0000</pubDate>
        
        <guid>https://wondrouswisdomcard.gitee.io/posts/index0/</guid>
        <description>Wondrous WindomCard&#39;s Blog https://wondrouswisdomcard.gitee.io/posts/index0/ -&lt;h1 id=&#34;19335286-的软导作业索引页&#34;&gt;【19335286】 的软导作业索引页&lt;/h1&gt;
&lt;h2 id=&#34;课后作业&#34;&gt;课后作业&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;../homework1/index.html&#34;&gt;01-Homework Of First Week&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../homework2/index.html&#34;&gt;02-Homework Of Second Week&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../homework3/index.html&#34;&gt;03-Homework Of Third Week&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../homework4/index.html&#34;&gt;04-Homework Of Fourth Week&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../homework5/index.html&#34;&gt;05-Homework Of Fifth Week&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../homework6/index.html&#34;&gt;06-Homework Of Sixth Week&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../homework7/index.html&#34;&gt;07-Homework Of Seventh Week&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../homework8/index.html&#34;&gt;08-Homework Of Eighth Week&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../homework9/index.html&#34;&gt;09-Homework Of Ninth Week&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../homework10/index.html&#34;&gt;10-Homework Of Tenth Week&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;实践与实验&#34;&gt;实践与实验&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;../blog1/index.html&#34;&gt;01-我的第一篇博客&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../blog2/index.html&#34;&gt;02-零基础游戏设计与制作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../blog3/index.html&#34;&gt;03-实验:电路与二进制运算&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../blog4/index.html&#34;&gt;04-实验:机器语言编程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../blog5/index.html&#34;&gt;05-伪代码描述洗衣机&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../blog6/index.html&#34;&gt;06-实验:用python做计算&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../blog7/index.html&#34;&gt;07-博客:IT伦理与道德&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../blog8/index.html&#34;&gt;08-编程:C语言实现贪吃蛇&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../blog9/index.html&#34;&gt;09-编程:C语言实现智能蛇&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;../blog10/index.html&#34;&gt;10-博客：互联网时代的热点领域选择与营销方法&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
- https://wondrouswisdomcard.gitee.io/posts/index0/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>Introduction of Hot Areas And Marketing Methods on Interet</title>
        <link>https://wondrouswisdomcard.gitee.io/posts/blog10/</link>
        <pubDate>Sun, 03 Jan 2021 00:00:00 +0000</pubDate>
        
        <guid>https://wondrouswisdomcard.gitee.io/posts/blog10/</guid>
        <description>Wondrous WindomCard&#39;s Blog https://wondrouswisdomcard.gitee.io/posts/blog10/ -&lt;h1 id=&#34;互联网时代的热点领域选择营销方法&#34;&gt;互联网时代的热点领域选择、营销方法&lt;/h1&gt;
&lt;p&gt;在互联网时代的浪潮下，万物皆可互联网+，区块链，人工智能，大数据成为互联网时代的热点领域，与此同时，在互联网时代的背景下，新的营销方法如雨后春笋般被提出，应用，造就新的品牌，本篇博客着眼几个互联网时代的热点领域和营销方法，作简要的介绍。&lt;/p&gt;
&lt;h2 id=&#34;热点领域&#34;&gt;热点领域&lt;/h2&gt;
&lt;h3 id=&#34;区块链技术&#34;&gt;区块链技术&lt;/h3&gt;
&lt;p&gt;所谓区块链技术，简称BT(Blockchain technology)，也被称之为分布式账本技术，是一种互联网数据库技术，其特点是去中心化、公开透明，让每个人均可参与数据库记录。最早是比特币的基础技术，目前世界各地均在研究，可广泛应用于金融等各领域。&lt;/p&gt;
&lt;p&gt;区块链技术就像互联网一样，它具有内置的稳健性。通过存储在其网络中相同的信息块，区块链不能: 1、受任何单一实体控制。2、没有单点故障。&lt;/p&gt;
&lt;p&gt;区块链技术具有的不可篡改、可以追溯等特点，可以和物联网技术具有的连接随手可及、计算无处不在等特点结合起来，借助物联网，在某一产品单元生产完成后，可以生成该产品的关键信息，比如生产设备加工该产品时采用的工艺数据，测试设备对该产品进行质检后得到的量测数据，这些数据打包成消息（比如JSON格式）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/blog10/1.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;引用自知乎 &lt;a href=&#34;https://zhuanlan.zhihu.com/p/338784867&#34;&gt;https://zhuanlan.zhihu.com/p/338784867&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;大数据&#34;&gt;大数据&lt;/h3&gt;
&lt;p&gt;大数据（big data），指无法在一定时间范围内用常规软件工具进行捕捉、管理和处理的数据集合，是需要新处理模式才能具有更强的决策力、洞察发现力和流程优化能力的海量、高增长率和多样化的信息资产。 在维克托·迈尔-舍恩伯格及肯尼斯·库克耶编写的《大数据时代》中大数据指不用随机分析法（抽样调查）这样捷径，而采用所有数据进行分析处理。大数据的5V特点（IBM提出）：Volume（大量）、Velocity（高速）、Variety（多样）、Value（低价值密度）、Veracity（真实性）。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/blog10/2.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;转载自知乎 &lt;a href=&#34;https://www.zhihu.com/topic/19740929/intro&#34;&gt;https://www.zhihu.com/topic/19740929/intro&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;人工智能&#34;&gt;人工智能&lt;/h3&gt;
&lt;p&gt;人工智能（Artificial Intelligence），英文缩写为AI。它是研究、开发用于模拟、延伸和扩展人的智能的理论、方法、技术及应用系统的一门新的技术科学。
人工智能是计算机科学的一个分支，它企图了解智能的实质，并生产出一种新的能以人类智能相似的方式做出反应的智能机器，该领域的研究包括机器人、语言识别、图像识别、自然语言处理和专家系统等。人工智能从诞生以来，理论和技术日益成熟，应用领域也不断扩大，可以设想，未来人工智能带来的科技产品，将会是人类智慧的“容器”。人工智能可以对人的意识、思维的信息过程的模拟。人工智能不是人的智能，但能像人那样思考、也可能超过人的智能。
人工智能是一门极富挑战性的科学，从事这项工作的人必须懂得计算机知识，心理学和哲学。人工智能是包括十分广泛的科学，它由不同的领域组成，如机器学习，计算机视觉等等，总的说来，人工智能研究的一个主要目标是使机器能够胜任一些通常需要人类智能才能完成的复杂工作。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/blog10/3.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;源自百度百科 &lt;a href=&#34;https://baike.baidu.com/item/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/9180&#34;&gt;https://baike.baidu.com/item/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/9180&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;工作流技术&#34;&gt;工作流技术&lt;/h3&gt;
&lt;p&gt;工作流就是“业务过程的部分或整体在计算机应用环境下的自动化”，它主要解决的是“使在多个参与者之间按照某种预定义的规则传递文档、信息或任务的过程自动进行，从而实现某个预期的业务目标，或者促使此目标的实现”。&lt;/p&gt;
&lt;p&gt;工作流系统，实现了工作流程的自动化，提高了企业运营效率，改善企业资源利用，提高企业运作的灵活性和适应性，提高量化考核业务处理的效率，减少浪费。
在java领域中，JBPM和Actvity是两个主流的工作流系统，而Flowable的出现无疑将会取代两个主流的工作流系统。&lt;/p&gt;
&lt;p&gt;摘自博客 &lt;a href=&#34;https://blog.csdn.net/weixin_42809672/article/details/82503011&#34;&gt;https://blog.csdn.net/weixin_42809672/article/details/82503011&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;云计算&#34;&gt;云计算&lt;/h3&gt;
&lt;p&gt;云计算（cloud computing）是分布式计算的一种，指的是通过网络“云”将巨大的数据计算处理程序分解成无数个小程序，然后，通过多部服务器组成的系统进行处理和分析这些小程序得到结果并返回给用户。云计算早期，简单地说，就是简单的分布式计算，解决任务分发，并进行计算结果的合并。因而，云计算又称为网格计算。通过这项技术，可以在很短的时间内（几秒钟）完成对数以万计的数据的处理，从而达到强大的网络服务。
现阶段所说的云服务已经不单单是一种分布式计算，而是分布式计算、效用计算、负载均衡、并行计算、网络存储、热备份冗杂和虚拟化等计算机技术混合演进并跃升的结果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/blog10/4.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;摘自百度百科 &lt;a href=&#34;https://baike.baidu.com/item/%E4%BA%91%E8%AE%A1%E7%AE%97/9969353&#34;&gt;https://baike.baidu.com/item/%E4%BA%91%E8%AE%A1%E7%AE%97/9969353&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;量子计算&#34;&gt;量子计算&lt;/h3&gt;
&lt;p&gt;量子计算是一种遵循量子力学规律调控量子信息单元进行计算的新型计算模式。对照于传统的通用计算机，其理论模型是通用图灵机；通用的量子计算机，其理论模型是用量子力学规律重新诠释的通用图灵机。从可计算的问题来看，量子计算机只能解决传统计算机所能解决的问题，但是从计算的效率上，由于量子力学叠加性的存在，某些已知的量子算法在处理问题时速度要快于传统的通用计算机。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/blog10/5.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;摘自百度百科 &lt;a href=&#34;https://baike.baidu.com/item/%E9%87%8F%E5%AD%90%E8%AE%A1%E7%AE%97/11035661?fr=aladdin&#34;&gt;https://baike.baidu.com/item/%E9%87%8F%E5%AD%90%E8%AE%A1%E7%AE%97/11035661?fr=aladdin&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;营销方法&#34;&gt;营销方法&lt;/h2&gt;
&lt;h3 id=&#34;o2o经济&#34;&gt;O2O经济&lt;/h3&gt;
&lt;p&gt;O2O，是Online To Offline的缩写即在线离线/线上到线下，是指将线下的商务机会与互联网结合，让互联网成为线下交易的平台，这个概念最早来源于美国。O2O的概念非常广泛，既可涉及到线上，又可涉及到线下,可以通称为O2O。主流商业管理课程均对O2O这种新型的商业模式有所介绍及关注。&lt;/p&gt;
&lt;p&gt;O2O营销模式又称离线商务模式，是指线上营销线上购买带动线下经营和线下消费。O2O通过打折、提供信息、服务预订等方式，把线下商店的消息推送给互联网用户，从而将他们转换为自己的线下客户，这就特别适合必须到店消费的商品和服务，比如餐饮、健身、看电影和演出、美容美发、摄影等。
实现O2O营销模式的核心是在线支付。&lt;/p&gt;
&lt;p&gt;和O2O类似的还有B2B（也有写成 BTB，是Business-to-Business的缩写）是指企业与企业之间通过专用网络或Internet，进行数据信息的交换、传递，开展交易活动的商业模式。它将企业内部网和企业的产品及服务，通过 B2B 网站或移动客户端与客户紧密结合起来，通过网络的快速反应，为客户提供更好的服务，从而促进企业的业务发展。&lt;/p&gt;
&lt;p&gt;·参考百度百科 O2O O2O营销模式 B2B&lt;/p&gt;
&lt;h3 id=&#34;小米的饥饿营销&#34;&gt;小米的饥饿营销&lt;/h3&gt;
&lt;p&gt;“饥饿营销”，运用于商品或服务的商业推广，是指商品提供者有意调低产量，以期达到调控供求关系、制造供不应求“假象”、以维护产品形象并维持商品较高售价和利润率的营销策略。&lt;/p&gt;
&lt;p&gt;·参考 &lt;a href=&#34;https://new.qq.com/omn/20200510/20200510A0IMJQ00.html&#34;&gt;https://new.qq.com/omn/20200510/20200510A0IMJQ00.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;·参考知乎 &lt;a href=&#34;https://zhuanlan.zhihu.com/p/31692491&#34;&gt;https://zhuanlan.zhihu.com/p/31692491&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;微软的软件捆绑&#34;&gt;微软的软件捆绑&lt;/h3&gt;
&lt;p&gt;案例： 微软向企业发布365软件包：捆绑销售Windows和Office&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/blog10/6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;·参考网页 &lt;a href=&#34;http://tech.sina.com.cn/roll/2017-07-11/doc-ifyhvyie0996429.shtml&#34;&gt;http://tech.sina.com.cn/roll/2017-07-11/doc-ifyhvyie0996429.shtml&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;·参考简书 &lt;a href=&#34;https://www.jianshu.com/p/0af0740c96b2&#34;&gt;https://www.jianshu.com/p/0af0740c96b2&lt;/a&gt;&lt;/p&gt;
- https://wondrouswisdomcard.gitee.io/posts/blog10/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>C - Smart Greedy Snake</title>
        <link>https://wondrouswisdomcard.gitee.io/posts/blog9/</link>
        <pubDate>Tue, 29 Dec 2020 00:00:00 +0000</pubDate>
        
        <guid>https://wondrouswisdomcard.gitee.io/posts/blog9/</guid>
        <description>Wondrous WindomCard&#39;s Blog https://wondrouswisdomcard.gitee.io/posts/blog9/ -&lt;h1 id=&#34;字符游戏---智能蛇&#34;&gt;字符游戏 - 智能蛇&lt;/h1&gt;
&lt;p&gt;文档和程序地址：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gitee.com/WondrousWisdomcard/WondrousWisdomcard/tree/master/code/blog9&#34;&gt;https://gitee.com/WondrousWisdomcard/WondrousWisdomcard/tree/master/code/blog9&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;编写智能算法&#34;&gt;编写智能算法&lt;/h3&gt;
&lt;p&gt;编写人工智能程序，使得 snake 每秒自动走一步。&lt;/p&gt;
&lt;h4 id=&#34;1程序要求说明&#34;&gt;1、程序要求说明&lt;/h4&gt;
&lt;p&gt;初始化字符矩阵中有一些你设定的障碍物（墙），并且保证非满地图中永远有且仅有一个食物。&lt;/p&gt;
&lt;p&gt;决定蛇行走的方向的算法如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;char whereGoNext(int Hx, int Hy, int Fx, int Fy){
    char movable[4] = {&#39;A&#39;,&#39;D&#39;,&#39;W&#39;,&#39;S&#39;}; //记录可走的方向
    int distance[4] = {INF,INF,INF,INF}; //记录离食物的距离
    
    if(map[Hy][Hx-1] == BLANK_CELL || map[Hy][Hx-1] == SNAKE_FOOD){ //A
        distance[0] = abs(Fx - (Hx-1)) + abs(Fy - Hy);
    }
    if(map[Hy][Hx+1] == BLANK_CELL || map[Hy][Hx+1] == SNAKE_FOOD){ //D
        distance[1] = abs(Fx - (Hx+1)) + abs(Fy - Hy);
    }
    if(map[Hy-1][Hx] == BLANK_CELL || map[Hy-1][Hx] == SNAKE_FOOD){ //W
        distance[2] = abs(Fx - Hx) + abs(Fy - (Hy-1));
    }
    if(map[Hy+1][Hx] == BLANK_CELL || map[Hy+1][Hx] == SNAKE_FOOD){ //S
        distance[3] = abs(Fx - Hx) + abs(Fy - (Hy+1));
    }

    int i, min = INF,j = INF; // j为最后决策方向的编号
    for(int i = 0; i &amp;lt; 4; i++){
        //printf(&amp;quot;%d\n&amp;quot;,distance[i]);
        if(distance[i] &amp;lt; min){
            min = distance[i];
            j = i;
        }
    }
    if(j != INF){
        printf(&amp;quot;%c&amp;quot;,movable[j]);
        return movable[j];
    }
    return &#39;A&#39;; //如果蛇蛇的所有方向都不可走，随机己返回一个方向结束游戏
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;思考一个长度为5的障碍物能困死该自动跑的蛇吗&#34;&gt;思考：一个长度为5的障碍物能困死该自动跑的蛇吗？&lt;/h5&gt;
&lt;p&gt;会，比如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    **
$   *  HXXXX
    **
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;由于蛇蛇的方向决策时只考虑下一个方向对应的位置是否能走，无法避开像上图这样的情况，蛇蛇会一直向左走，而不会绕过这个&amp;quot;陷阱&amp;rdquo;，最后导致游戏结束。&lt;/p&gt;
&lt;h4 id=&#34;2智能蛇的程序框架&#34;&gt;2、智能蛇的程序框架&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;initMap(); //地图初始化
putOneFood(); //随机创建一个食物
for(int i = 0; i &amp;lt; 10; i++){ //随机创建十个障碍
    putOneBlock();
}

sleep(1); 
printf(&amp;quot;\033[2J&amp;quot;); //每隔一秒刷新命令行显示
showGird(); //初始表格显示

int sign = 0;
char direction = &#39;N&#39;;
while(sign == 0){
    direction = whereGoNext(snakeX[snakeLength-1], snakeY[snakeLength-1], foodX[topFoodIndex], foodY[topFoodIndex]); //智能决策
    switch(direction){ //执行蛇的移动
        case &#39;A&#39;: sign = snakeMove(-1,0); break;
        case &#39;D&#39;: sign = snakeMove(1,0); break;
        case &#39;W&#39;: sign = snakeMove(0,-1); break;
        case &#39;S&#39;: sign = snakeMove(0,1); break;
        default : printf(&amp;quot;...\n&amp;quot;); break;
    }
    if(topFoodIndex == -1){ //我们规定只有蛇蛇把地图上仅有的食物吃掉后再生成新的食物
        putOneFood();
    }
    if(sign == 0){
        showGird(); //移动后显示表格
    }  
}
gameover(sign); //结束游戏
&lt;/code&gt;&lt;/pre&gt;
&lt;h5 id=&#34;成果展示&#34;&gt;成果展示&lt;/h5&gt;
&lt;p&gt;最终程序能在Linux下运行，借助VT100终端标准自动刷新终端动态显示网格的功能。&lt;/p&gt;
&lt;p&gt;可以看到小蛇自己动了起来，最后由于算法和障碍的设置而游戏失败：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/blog9/1.gif&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;评价&#34;&gt;评价&lt;/h4&gt;
&lt;p&gt;通过这个实验，我们体验了最简单的智能算法用在蛇蛇的走动上，实现了蛇蛇自己寻找食物；让蛇有一定的智能，能通过算法具有 “感知 - 决策 - 行动” 的能力。&lt;/p&gt;
&lt;p&gt;在借助Linux命令行的IO设计的控制上，更完整地实现了一个基于命令行的小游戏。&lt;/p&gt;
- https://wondrouswisdomcard.gitee.io/posts/blog9/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>C - Greedy Snake</title>
        <link>https://wondrouswisdomcard.gitee.io/posts/blog8/</link>
        <pubDate>Fri, 18 Dec 2020 00:00:00 +0000</pubDate>
        
        <guid>https://wondrouswisdomcard.gitee.io/posts/blog8/</guid>
        <description>Wondrous WindomCard&#39;s Blog https://wondrouswisdomcard.gitee.io/posts/blog8/ -&lt;h1 id=&#34;字符游戏---贪吃蛇&#34;&gt;字符游戏 - 贪吃蛇&lt;/h1&gt;
&lt;p&gt;文档和程序地址：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gitee.com/WondrousWisdomcard/WondrousWisdomcard/tree/master/code/blog8&#34;&gt;https://gitee.com/WondrousWisdomcard/WondrousWisdomcard/tree/master/code/blog8&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
- https://wondrouswisdomcard.gitee.io/posts/blog8/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>Talk 1 - Introduction of Scholarship</title>
        <link>https://wondrouswisdomcard.gitee.io/posts/talk1/</link>
        <pubDate>Sat, 05 Dec 2020 00:00:00 +0000</pubDate>
        
        <guid>https://wondrouswisdomcard.gitee.io/posts/talk1/</guid>
        <description>Wondrous WindomCard&#39;s Blog https://wondrouswisdomcard.gitee.io/posts/talk1/ -&lt;h1 id=&#34;第一次课业辅导---奖学金介绍部分&#34;&gt;第一次课业辅导 - 奖学金介绍部分&lt;/h1&gt;
&lt;h4 id=&#34;19软工-郑有为&#34;&gt;19软工 郑有为&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;下面为匆忙之中的收集 如有错误，请指出&lt;/em&gt;:)&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;因为不同专业的具体奖学金评定和种类稍有不同，
又考虑到这次参加辅导的小朋友来自下面几个学院：
&lt;strong&gt;航空航天学院
智能工程学院
计算机学院
生物医学工程&lt;/strong&gt;
下面的资料尽可能考虑专业的差异，对于不同专业不同的地方会特殊声明。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;1-绩点平均绩点和综合测评&#34;&gt;1. 绩点，平均绩点和综合测评&lt;/h2&gt;
&lt;h3 id=&#34;绩点科目成绩-5001&#34;&gt;绩点：(科目成绩-50)*0.1&lt;/h3&gt;
&lt;p&gt;满绩5.0,&lt;em&gt;不合格就无绩点了(需补考/重修)&lt;/em&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;比如 
课程A的期末成绩为90分，绩点为 (90-50)*0.1=4.0
课程B的期末成绩为60分，绩点为 (60-50)*0.1=1.0
课程C的期末成绩为49分，需补考
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;平均学分绩点&#34;&gt;平均学分绩点：&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;平均学分绩点GPA:考虑加权，学分越高的课(比如军理，高数等等)占比重更大&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;必修专选平均绩点&lt;/strong&gt;:与GPA的差别在于不考虑公选。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;综测必修专选平均绩点--综测加分--一定比例&#34;&gt;综测：必修专选平均绩点 + (综测加分 * 一定比例)&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;综合测评成绩为学业成绩、综合测评加分、综合 测评扣分三部分的总和。&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;考虑&lt;strong&gt;专必，专选，公必&lt;/strong&gt;(包括体育，英语，马原思修等等)的成绩，不算入公选(&lt;em&gt;不代表公选考多少都没关系,出国要考虑公选&lt;/em&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;综测还考虑综测加分:但是不同学院加分比例不一样：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 航院 综测 = 平均绩点 + 综测加分*0.06
 计院,生医工,智工 综测 = 平均绩点 + 综测加分*0.1
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;综测加分：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;关于加分细则，不同学院不同安排&lt;/strong&gt;，到时候学院会发完整的通知。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;综合测评加分必须有相应凭证，且加分不超过本人学业成绩的10%。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;综测加分主要包括：(加分项目会被分的很细，需要自己认真看)（国家级、校级；一等、二等都有不同)&lt;/p&gt;
&lt;p&gt;比如有竞赛获奖和论文发表&lt;/p&gt;
&lt;p&gt;体育文娱比赛获奖&lt;/p&gt;
&lt;p&gt;任职校级/院级社团/组织的部长主任秘书长等等&lt;/p&gt;
&lt;p&gt;班委干部等等&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;2-奖学金的种类金额和获奖比例&#34;&gt;2. 奖学金的种类，金额和获奖比例&lt;/h2&gt;
&lt;p&gt;一般&lt;strong&gt;名额是学校分配给学院的，然后学院分配到不同年级不同专业/教务班&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;奖学金种类&lt;/strong&gt;：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;国家（政府）设立的奖励项目&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;国家奖学金&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;国家励志奖学金&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;教育部台湾、港澳及华侨学生奖学金&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;学校设立的奖励项目&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;中山大学优秀学生奖学金&lt;/strong&gt;(&lt;strong&gt;一奖，二奖，三奖&lt;/strong&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中山大学台湾、港澳及华侨学生奖学金&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中山大学专项奖学金&lt;/p&gt;
&lt;p&gt;(分为学术创新奖、道德风尚奖、学科竞赛奖、文体艺术奖和学业进步奖等五类。同一申请人可同时申请不同类别的专项奖学金， 但获得专项奖学金奖励不超过一项)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中山大学励志奖学金&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;中山大学英才奖学金&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;捐赠奖学金：包括校级和院系级捐赠奖学金(不同专业不同，具体看通知)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;奖学金金额：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;国奖 - 8000元&lt;/li&gt;
&lt;li&gt;优秀奖学金
&lt;ol&gt;
&lt;li&gt;一奖 4000元&lt;/li&gt;
&lt;li&gt;二奖 3000元&lt;/li&gt;
&lt;li&gt;三奖 2000元&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;励志奖学金&lt;/li&gt;
&lt;li&gt;专项奖学金
&lt;ol&gt;
&lt;li&gt;一奖 2000元&lt;/li&gt;
&lt;li&gt;二奖 1000元&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;奖学金分配比例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;国奖：年级排名前几，看学院国奖名额 (我们19计算机类三百多人有四个名额)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;中山大学优秀学生奖学金&lt;/strong&gt;名额根据各学院（系）参评奖学金本科生人数按比例分配。学院（系）获得优秀学生奖学金的学生人数一般不超过本学院（系）参评奖学金本科生总人数的&lt;strong&gt;30%&lt;/strong&gt;，其中&lt;strong&gt;一等不超过5%，二等不超过 10%，三等不超过15%。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;（注：综合测评成绩占前8%才具备一奖申请资格，占前20%才具备二奖申请资格，占前50%才具备三奖申请资格）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;国家/校励志奖学金:参评要求：学校认定为家庭经济困难的学生，综合测评排名靠前&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;特殊情况处理原则：&lt;/p&gt;
&lt;p&gt;（一）国家奖学金、国家励志奖学金不可兼得&lt;/p&gt;
&lt;p&gt;（二）每位学生最多只能获评一项校级捐赠奖学金&lt;/p&gt;
&lt;p&gt;（三）国家设置的奖学金和中山大学励志奖学金不可兼得&lt;/p&gt;
&lt;p&gt;（四）捐赠奖学金和中山大学励志奖学金不可兼得&lt;/p&gt;
&lt;p&gt;（五）获得中山大学优秀学生奖学金或中山大学励志奖学金的学生，如同时获评专项奖学金，可兼得荣誉，奖励金按单项最高金额发放。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;3-拿奖学金要注意什么&#34;&gt;3. 拿奖学金要注意什么？&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;评选年度内无不及格科目。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一学年里的公益时要到达：（看不同学院）&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 计算机 50/年
 生医工 无公益时要求
 智工 60/年
 航院 30/年
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;em&gt;一些专项的奖学金没有公益时要求，到时候学院会发文件下来，有各种奖学金的报名要求和报名方式，可以自己去参考&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;公益时是一年的总公益时，课余时间尽量找公益活动坐，如果社团公益时加成的更好&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;体测达标，指体测成绩合格&lt;/p&gt;
&lt;p&gt;具体评分标准可以参考这个网站 &lt;a href=&#34;https://www.sohu.com/a/197313805_694281&#34;&gt;https://www.sohu.com/a/197313805_694281&lt;/a&gt; (随便网上找的)&lt;/p&gt;
&lt;p&gt;每学期都有体育测试，肺活量，50米，立定跳远，坐位体前屈，1000/800米，体重指数BMI，引体向上/仰卧起坐&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果体质不好要腾出时间坚持锻炼&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;经营绩点！因为不同专业不同课程，甚至不同班级评分标准不同，我们要尽可能认真去写作业，完成考勤，测试，考试，科科往上冲 这也是在为保研做准备&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;4奖学金怎么报&#34;&gt;4.奖学金怎么报？&lt;/h2&gt;
&lt;h4 id=&#34;国家奖学金&#34;&gt;国家奖学金&lt;/h4&gt;
&lt;p&gt;符合条件者自行在学生工作管理系统（xgxt.sysu.edu.cn）上申报（学生工作管理系统凭NETID登录）&lt;/p&gt;
&lt;h4 id=&#34;优秀奖学金&#34;&gt;优秀奖学金&lt;/h4&gt;
&lt;p&gt;(一)学院发布通知;&lt;/p&gt;
&lt;p&gt;(二)学生提交素质综合测评相关证明材料;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;体测成绩的截图（体适能上），和综测附加分的证明材料（加分凭证包括：相应证书的复印件，原件备查，若无证书，需上交相关部门或合法团体的书面证明，以及加分细则说明中要求上交的材料。）
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;(三)各年级审核并统计素质综合测评分数;
(四)各年级公示; (五)各年级将审核结果上报学院(系); (六)学院审核;
(七)学院公示; (八)学院公布素质综合测评结果。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;要养成认真看通知的好习惯&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;不要因为奖学金的事情着急，可能一年后才真正需要了解这些细节，但是必须有个目标，学习上成绩上的目标，然后朝着这个方向努力，不把平常需要做的事情落下来&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2020-10-06&lt;/p&gt;
- https://wondrouswisdomcard.gitee.io/posts/talk1/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>Talk 2 - My Experience of Exam Reviews</title>
        <link>https://wondrouswisdomcard.gitee.io/posts/talk2/</link>
        <pubDate>Sat, 05 Dec 2020 00:00:00 +0000</pubDate>
        
        <guid>https://wondrouswisdomcard.gitee.io/posts/talk2/</guid>
        <description>Wondrous WindomCard&#39;s Blog https://wondrouswisdomcard.gitee.io/posts/talk2/ -&lt;h1 id=&#34;第二次课业辅导---个人复习经验&#34;&gt;第二次课业辅导 - 个人复习经验&lt;/h1&gt;
&lt;h4 id=&#34;19软工-郑有为&#34;&gt;19软工 郑有为&lt;/h4&gt;
&lt;p&gt;&lt;em&gt;个人摸索的收获，仅供参考，希望能给你一点启发&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;1工程化的复习方式&#34;&gt;1、工程化的复习方式：&lt;/h3&gt;
&lt;h4 id=&#34;系统化&#34;&gt;&lt;strong&gt;系统化&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;准备：如果你还没有… 整理老师课件/整理自己的作业&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;什么时候开始复习？我还有课/论文/大作业？不用焦虑，优先把任务做完留时间复习&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;推荐考试周前一周开始陆陆续续利用零散的时间复习，考试周是留给考试和考试复习的，不是用来赶DDL的&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;提前制定时间表和任务清单：考试时间，&lt;strong&gt;考试间隙&lt;/strong&gt;的复习安排？&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;规范化&#34;&gt;&lt;strong&gt;规范化&lt;/strong&gt;&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;图书馆（考试周图书馆爆满，看你能不能早起了） &amp;gt; 自习室/教室（人相对不会那么多） &amp;gt; 宿舍（看情况）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;消遣软件？报复性反弹，不如卸载&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;屏幕管理APP比如Forest&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/talk2/1.jpg&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;可度量&#34;&gt;&lt;strong&gt;可度量&lt;/strong&gt;&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;复习笔记反应复习效果&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;心理激励：成果汇报&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;2数学类&#34;&gt;2、数学类&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;笔者没有学高数，可能复习思路有些不同&lt;/em&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;优质的考前笔记：知识点照搬(x) 错题摘抄(x) 总结型笔记(ok)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;总结型笔记&lt;/strong&gt;：必要的整合归纳，关键词，容易忘的/容易忽略的 这一节会考什么题 部分题的解法和思路（技巧收集贴） 易错点/易疏忽点&lt;/p&gt;
&lt;p&gt;&lt;em&gt;存着！别扔！以后有用&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;XMind/纸质版都OK&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/talk2/2.jpg&#34; alt=&#34;知识点梳理照搬&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/talk2/3.jpg&#34; alt=&#34;省时的复习笔记&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/talk2/4.jpg&#34; alt=&#34;总结型复习笔记&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;证明题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对于课后习题，如果不懂，看答案写大体思路（以关键词形式呈现）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/talk2/5.jpg&#34; alt=&#34;2&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;不交白卷&lt;/strong&gt;，没有思路则优先把自己能想到的东西写上去（比如写定理）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;3编程类&#34;&gt;3、编程类&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;机试考前复习：
（每周都有编程训练的话，一般没啥好复习的）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;如果你想刷题的话：&lt;strong&gt;刷其他教学班的题&lt;/strong&gt;（找其他班的朋友要）会比洛谷，Leetcode好一些&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;考试周最多是实现一下之前没怎么弄清楚的算法（比如排序，括号匹配等等）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;机试考试：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;本地测试：（Linux）最起码的gcc test.c -o test 和 ./test要懂，用适合自己的IDE&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有时候，打表也是思路&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;写不出来/没时间了：（迫不得已）骗编译分&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;理论复习：考前刷 &lt;strong&gt;考试酷&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;问一下老师提不提供理论题库，如果谁有可以一起分享&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;4英语&#34;&gt;4、英语&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;考原文的!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;看一遍课本阅读 -&amp;gt; 阅读题和翻译&lt;/p&gt;
&lt;p&gt;听一遍课本听力 -&amp;gt; 听力题&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;引词跟踪法&lt;/strong&gt; （需要坚持训练）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;不依赖听力原文材料，连续听听力的同时跟读&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每听一句英语，停住听力，原文复述&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;a href=&#34;https://m.weibo.cn/status/4528033685572212&#34;&gt;https://m.weibo.cn/status/4528033685572212&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;5军理史纲&#34;&gt;5、军理/史纲&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;二维码&lt;/strong&gt;题库刷题 - 考试题库/模拟考试&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/talk2/6.jpg&#34; alt=&#34;军理之码&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;课本课后主观题/答案： 网上找(成套的)/课本找&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;主观题基本就是课后习题里的主观题&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;祝大家期末顺利考试成功！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2020-12-06&lt;/p&gt;
- https://wondrouswisdomcard.gitee.io/posts/talk2/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>Ethics&amp;Morality on IT</title>
        <link>https://wondrouswisdomcard.gitee.io/posts/blog7/</link>
        <pubDate>Sat, 28 Nov 2020 00:00:00 +0000</pubDate>
        
        <guid>https://wondrouswisdomcard.gitee.io/posts/blog7/</guid>
        <description>Wondrous WindomCard&#39;s Blog https://wondrouswisdomcard.gitee.io/posts/blog7/ -&lt;h1 id=&#34;it伦理与道德讨论流氓软件与垃圾广告&#34;&gt;IT伦理与道德讨论：流氓软件与垃圾广告&lt;/h1&gt;
&lt;p&gt;在互联网快速发展的今天，我们享受着互联网和软件给我们的服务与便利，而与此同时，提供软件的开发商为了利润向我们发送花样百出的广告，甚至利用用户对计算机不了解而修改用户内容，强制启动，强制弹出低质量的甚至具有欺骗性的广告。&lt;/p&gt;
&lt;p&gt;一方面，我们免费使用软件，我们理应接受服务者提供广告，另一方面，服务商为了利润，不惜干涉我们对电脑的正常使用。流氓软件和垃圾广告充斥着整个软件市场，在法律尚未完善的情况下在试探伦理与道德的底线。&lt;/p&gt;
&lt;h3 id=&#34;1-流氓软件的概念&#34;&gt;1. 流氓软件的概念&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;“流氓软件”是介于病毒和正规软件之间的软件。如果电脑中有流氓软件，可能会出现以下几种情况：用户使用电脑上网时，会有窗口不断跳出；电脑浏览器被莫名修改增加了许多工作条；当用户打开网页时，网页会变成不相干的奇怪画面，甚至是黄色广告。^[百度百科：流氓软件]&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;流氓软件有着如下几个特点：&lt;/p&gt;
&lt;p&gt;它采用多种社会和技术手段，&lt;strong&gt;强行或者秘密安装，并抵制卸载&lt;/strong&gt;；&lt;strong&gt;能强行修改用户软件设置&lt;/strong&gt;，如浏览器的主页，软件自动启动选项，安全选项；&lt;strong&gt;强行弹出广告，或者其他干扰用户、占用系统资源行为&lt;/strong&gt;；有侵害用户信息和财产安全的潜在因素或者隐患；未经用户许可，或者利用用户疏忽，或者利用用户缺乏相关知识，秘&lt;strong&gt;密收集用户个人信息、秘密和隐私&lt;/strong&gt;；&lt;strong&gt;威胁恐吓或误导用户安装其他的产品&lt;/strong&gt;。 ^[百度百科：流氓软件]&lt;/p&gt;
&lt;h3 id=&#34;2-流氓软件的灰色产业链&#34;&gt;2. 流氓软件的灰色产业链：&lt;/h3&gt;
&lt;p&gt;“流氓软件”的最大商业用途就是散布广告，并形成了整条灰色产业链：企业为增加注册用户、提高访问量或推销产品，向网络广告公司购买广告窗口流量，网络广告公司用自己控制的广告插件程序，在用户电脑中强行弹出广告窗口。
而为了让广告插件神不知鬼不觉地进入用户电脑，大多数时候广告公司是通过联系热门免费共享软件的作者，以每次几分钱的价格把广告程序通过插件的形式捆绑到免费共享软件中，用户在下载安装这些免费共享软件时广告程序也就趁虚而入。
据称，&lt;strong&gt;网络广告的计费是按弹出次数&lt;/strong&gt;进行的，使用“流氓软件”可以在用户根本没有授权的情况下随意弹出广告，提高广告弹出次数，籍此提高广告收益。一个“装机量”大的广告插件公司，凭“流氓软件”月收入在百万元以上。^[百度百科：流氓软件]&lt;/p&gt;
&lt;h3 id=&#34;3-用户体验观感&#34;&gt;3. 用户体验观感&lt;/h3&gt;
&lt;p&gt;案例1：2345浏览器&lt;/p&gt;
&lt;p&gt;在知乎的一篇文章 &lt;a href=&#34;https://zhuanlan.zhihu.com/p/150785825&#34;&gt;https://zhuanlan.zhihu.com/p/150785825&lt;/a&gt; 中， 2345 浏览器，2345 好压被列入了强烈不建议安装的软件，起因是2345 浏览器会强制改变浏览器主页绑定，有着难删除，难彻底删除，频繁推送广告的特点。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/blog7/1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;在知乎讨论 &lt;strong&gt;最流氓的软件可以流氓到什么程度？&lt;/strong&gt; 中有这么一篇回答：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/blog7/2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;让人哭笑不得的伴随安装&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/blog7/3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;案例二：虚假的套路式广告&lt;/p&gt;
&lt;p&gt;来自知乎用户风雨的回答：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/blog7/4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;4-垃圾广告&#34;&gt;4. 垃圾广告&lt;/h3&gt;
&lt;p&gt;参考知乎提问：&lt;strong&gt;如何看待中国互联网垃圾广告问题？&lt;/strong&gt; &lt;a href=&#34;https://www.zhihu.com/question/39396173&#34;&gt;https://www.zhihu.com/question/39396173&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;大多数人认为垃圾广告严重影响了上网的质量，低俗的，虚假的广告不仅会扭曲青少年儿童等群体，还可能使人受骗上当，净化互联网迫在眉睫。&lt;/p&gt;
&lt;p&gt;而另一部分人认为：网站要生存，但这些流量小的网站不受那些大（正常）广告主的青睐，但他们要生存，要挣钱，所以只能有这些低级甚至虚假广告存在。而且在我们日常生活中处处存在着垃圾广告，电线杆，甚至是共享单车上都会有各种广告，单单对互联网，软件上的广告眼红是不公平的。&lt;/p&gt;
&lt;h3 id=&#34;5-误导性广告新花样&#34;&gt;5. 误导性广告新花样&lt;/h3&gt;
&lt;p&gt;案例：拼多多
参考文章：令人讨厌的“拼多多” &lt;a href=&#34;https://zhuanlan.zhihu.com/p/102700604&#34;&gt;https://zhuanlan.zhihu.com/p/102700604&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/blog7/5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;没有选择把自己的logo放在显著位置而是将之“隐藏”起来已经说明拼多多“做贼心虚”。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;仔细分析一下这三个广告，其中一个是“签到福利”，意思是在app签到即可获得现金50～100元不等的转账，然而我翻遍了整个APP也没有看到一个“签到”功能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;拿不存在的功能出来投放广告，这是实打实的欺骗了？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;再看另外两个广告，一个宣传的是充值送话费，另一个宣传的则是“天天领现金”的诱导分享活动，都是非常有技巧地将“最高10/100元，金额以实际为准”的字眼用接近背景色的深色隐藏起来，在两三秒的开屏广告时间内，很难被注意到。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;这种做法不可谓不“鸡贼”，也着实令人讨厌&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;个人使用软件体验：像拼多多，抖音，淘宝这样的广告经常出现在某些应用软件启动时，首先这些软件借助虚假的宣传含糊的说明引诱用户点进去，而一旦点击进去，不经过用户同意，后台就自动开始下载拼多多。如果多加注意还好，然而用户经常由于不小心触摸显示屏而“触发了这些扳机”，不小心下载软件。除此之外，广告会被做的非常有欺骗性：比如说广告投屏上会做一个虚假的“关闭”按钮，欺骗用户点进去下载软件，稍不注意或缺乏经验就会中招。&lt;/p&gt;
&lt;p&gt;显然着不含欺骗性诱导性的因素，但由于执法难和定法难等因素使得这些“操作”猖狂地进行。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;小结&#34;&gt;小结&lt;/h2&gt;
&lt;p&gt;总的来说，互联网环境还不够成熟，出现了花样百出令人不悦的流氓软件和垃圾广告；很大程度上，用户在去适应他们，就和适应如何对待骚扰电话一样，在我去浏览器上搜索“垃圾广告”，“流氓软件”时，出现非常多的话题是“如何彻底卸载软件”，“如何关闭广告投放”等等，在互联网发达的世界，用户们也自己去营造自己“舒适的冲浪之旅”，与流氓软件，垃圾广告抗衡。&lt;/p&gt;
&lt;p&gt;有违背用户需要的软件不可能长期发展，那些曾经喧哗一时的流氓软件也慢慢被时代淘汰，一句话说得好：“时间在检验这一切”，在这个光速发展的互联网世界也是如此。&lt;/p&gt;
- https://wondrouswisdomcard.gitee.io/posts/blog7/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>Computing By Using Python</title>
        <link>https://wondrouswisdomcard.gitee.io/posts/blog6/</link>
        <pubDate>Tue, 17 Nov 2020 00:00:00 +0000</pubDate>
        
        <guid>https://wondrouswisdomcard.gitee.io/posts/blog6/</guid>
        <description>Wondrous WindomCard&#39;s Blog https://wondrouswisdomcard.gitee.io/posts/blog6/ -&lt;h1 id=&#34;python-编程实验报告&#34;&gt;Python 编程实验报告&lt;/h1&gt;
&lt;h1 id=&#34;实验目的&#34;&gt;实验目的&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;用Python求解高数题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;求解一元方程&lt;/li&gt;
&lt;li&gt;求导&lt;/li&gt;
&lt;li&gt;求积分&lt;/li&gt;
&lt;li&gt;求泰勒展开&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用Python求解线代题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;求解矩阵方程组&lt;/li&gt;
&lt;li&gt;求行列式&lt;/li&gt;
&lt;li&gt;求矩阵的逆&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;实验准备&#34;&gt;实验准备&lt;/h1&gt;
&lt;p&gt;下载并安装软件 Anaconda3&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/blog6/1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;实验步骤和实验结果&#34;&gt;实验步骤和实验结果&lt;/h1&gt;
&lt;h2 id=&#34;用python求解高数题&#34;&gt;用Python求解高数题&lt;/h2&gt;
&lt;h3 id=&#34;求解一元方程&#34;&gt;求解一元方程&lt;/h3&gt;
&lt;p&gt;1.&lt;strong&gt;设 f(x) = (1 - x) / (1 + x), 求证 f(f(x)) = x.&lt;/strong&gt;(参考数分上册课本 Page24 第一题)&lt;/p&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;x = Symbol(&#39;x&#39;)
def f(x): return (1-x)/(1+x)
def g(x): return f(f(x))
simplify(g(x) - x)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;运行结果与截屏：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/blog6/2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.&lt;strong&gt;解 x + 1/x = 0&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;运行结果与截屏：答案是两个虚数 i 和 -i&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/blog6/3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;若再设置一个变量 y ,有&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/blog6/4.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;求导&#34;&gt;求导&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;求 y = arcsin(x)/sqrt(1-x^2)的一阶导数和二阶导数。&lt;/strong&gt;(数分上册 Page 122.1.(3))&lt;/p&gt;
&lt;p&gt;运行结果与截屏：&lt;/p&gt;
&lt;p&gt;y&amp;rsquo; = x * arcsin(x)/(1 - x^2)^(3/2) + 1/(1 - x^2)&lt;/p&gt;
&lt;p&gt;y&amp;rsquo;&amp;rsquo; = 3 * x^2 * arcsin(x) / (1 - x^2)^(5/2) + 3*x/(1 - x^2)^2 + aecsin(x)/(1 - x^2)^(3/2)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/blog6/5.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;求积分&#34;&gt;求积分&lt;/h3&gt;
&lt;p&gt;求定积分 **\int_{0}^{\pi}cos^2(x)dx**(数分上册 Page 216.1.(1))&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/blog6/6.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;求泰勒展开&#34;&gt;求泰勒展开&lt;/h3&gt;
&lt;p&gt;求在 x = 0 处泰勒展开(数分上册 Page 246.2.(3)(4))&lt;/p&gt;
&lt;p&gt;x^2 / sqrt(1 - x + x^2) ,(x^4);&lt;/p&gt;
&lt;p&gt;x / sin(x) ,(x^6);&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/blog6/7.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;用python求解线代题&#34;&gt;用Python求解线代题&lt;/h2&gt;
&lt;h3 id=&#34;求解方程组&#34;&gt;求解方程组&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;x + 2y + z = 1
2x + 3y + (a+2)z = 3
x + ay - 2z = 0
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../images/blog6/8.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;求行列式&#34;&gt;求行列式&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;1 2 1
2 3 2
1 1 -2

import numpy as np
n = np.array([[1,2,1], [2,3,2], [1,1,-2]])
np.linalg.matrix_rank(n) #返回矩阵的秩
np.linalg.det(n) #返回矩阵的行列式
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../images/blog6/9.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;求矩阵的逆和转置&#34;&gt;求矩阵的逆和转置&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;1 2 1
2 3 2
1 1 -2

import numpy as np
A = np.mat(&amp;quot;1,2,1;2,3,2;1,1,-2&amp;quot;)
print(&amp;quot;A\n&amp;quot;, A)
inverse = np.linalg.inv(A)
print(&amp;quot;Inverse: \n&amp;quot;, inverse)
transpose = np.transpose(A)
print(&amp;quot;Transpose: \n&amp;quot;, transpose)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../images/blog6/10.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
- https://wondrouswisdomcard.gitee.io/posts/blog6/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>Java - The Learning Experience 4</title>
        <link>https://wondrouswisdomcard.gitee.io/posts/java4/</link>
        <pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate>
        
        <guid>https://wondrouswisdomcard.gitee.io/posts/java4/</guid>
        <description>Wondrous WindomCard&#39;s Blog https://wondrouswisdomcard.gitee.io/posts/java4/ -&lt;h1 id=&#34;exceptions-异常处理&#34;&gt;Exceptions 异常处理&lt;/h1&gt;
&lt;hr&gt;
&lt;h3 id=&#34;三种类型的异常&#34;&gt;三种类型的异常：&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;检查性异常&lt;/strong&gt;：最具代表的检查性异常是用户错误或问题引起的异常，这是程序员无法预见的。例如要打开一个不存在文件时，一个异常就发生了，这些异常在编译时不能被简单地忽略。例如：SQLException, IOException, FileNotFoundException&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;运行时异常&lt;/strong&gt;： 运行时异常是可能被程序员避免的异常。与检查性异常相反，运行时异常可以在编译时被忽略。例如：ArithmeticException, ClassCastException, ArrayIndexOutOfBoundsException, NullPointerException&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;错误&lt;/strong&gt;： 错误不是异常，而是脱离程序员控制的问题。错误在代码中通常被忽略。例如，当栈溢出时，一个错误就发生了，它们在编译也检查不到的。例如：System malfunction, OutOfMemoryException, StackOverflowError&lt;/p&gt;
&lt;p&gt;理解：
1、检查性异常: 不处理编译不能通过
2、非检查性异常:不处理编译可以通过，如果有抛出直接抛到控制台
3、运行时异常: 就是非检查性异常
4、非运行时异常: 就是检查性异常&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;exception-类的层次&#34;&gt;Exception 类的层次&lt;/h3&gt;
&lt;p&gt;所有的异常类是从 java.lang.Exception 类继承的子类。 Exception 类是 Throwable 类的子类。除了Exception类外，Throwable还有一个子类Error。 Java 程序通常不捕获错误。错误一般发生在严重故障时，它们在Java程序处理的范畴之外。 Error 用来指示运行时环境发生的错误。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;../../images/java4/1.png&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;java-内置异常类和方法&#34;&gt;Java 内置异常类和方法&lt;/h3&gt;
&lt;p&gt;链接：https://www.runoob.com/java/java-exceptions.html
&lt;img src=&#34;../../images/java4/2.png&#34; alt=&#34;2&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;关键字-try-catch-throw-finally&#34;&gt;关键字 try catch throw finally&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;../../images/java4/3.png&#34; alt=&#34;3&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;throws--throw&#34;&gt;throws / throw&lt;/h4&gt;
&lt;p&gt;如果一个方法没有捕获到一个检查性异常，那么该方法必须使用 throws 关键字来声明。throws 关键字放在方法签名的尾部。&lt;/p&gt;
&lt;p&gt;也可以使用 throw 关键字抛出一个异常，无论它是新实例化的还是刚捕获到的,多个异常之间用逗号隔开。
下面方法的声明抛出一个 RemoteException 异常：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import java.io.*;
public class className
{
public void deposit(double amount) throws RemoteException
{
    // Method implementation
    throw new RemoteException();
}
//Remainder of class definition
}
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;finally&#34;&gt;finally&lt;/h4&gt;
&lt;p&gt;关键字用来创建在 try 代码块后面执行的代码块。
无论是否发生异常，finally 代码块中的代码总会被执行。
在 finally 代码块中，可以运行清理类型等收尾善后性质的语句。
finally 代码块出现在 catch 代码块最后。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;自定义异常类&#34;&gt;自定义异常类&lt;/h3&gt;
&lt;p&gt;所有异常都必须是 Throwable 的子类。
如果希望写一个检查性异常类，则需要继承 Exception 类。&lt;/p&gt;
&lt;p&gt;下图是几种声明类型：
&lt;img src=&#34;../../images/java4/4.png&#34; alt=&#34;4&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;几则练习&#34;&gt;几则练习&lt;/h3&gt;
&lt;h4 id=&#34;exercise-1&#34;&gt;Exercise 1&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;../../images/java4/6.png&#34; alt=&#34;6&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;exercise-2&#34;&gt;Exercise 2&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;class Divide {
    public static void main(String args[]) {
        try {
        System.out.println(&amp;quot;Before Division&amp;quot;);
        int i = Integer.parseInt(args[0]);
        int j = Integer.parseInt(args[1]);
        System.out.println(i / j);
        System.out.println(&amp;quot;After Division&amp;quot;);
        }
        catch (ArithmeticException e) {
        System.out.println(&amp;quot;ArithmeticException&amp;quot;);
        }
        catch (ArrayIndexOutOfBoundsException e) {
        System.out.println(&amp;quot;ArrayIndex&amp;quot; +
        &amp;quot;OutOfBoundsException&amp;quot;);
        }
        catch (NumberFormatException e) {
        System.out.println(&amp;quot;NumberFormatException&amp;quot;);}
        finally {
            System.out.println(&amp;quot;Finally block&amp;quot;);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;String args[]为空的输出：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Before Division
ArrayIndexOutOfBoundsException
Finally block
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;exercise-3&#34;&gt;Exercise 3&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;../../images/java4/7.png&#34; alt=&#34;7&#34;&gt;&lt;/p&gt;
&lt;p&gt;输出：//自己写的 有可能有问题子&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Before a 
Before b 
Before c 
Before d 
d: finally 
c: finally 
b: e(ArrayIndexOutOfBoundsException) 
b: finally 
After b 
a: finally 
After a 
main: finally
&lt;/code&gt;&lt;/pre&gt;
&lt;h4 id=&#34;exercise-4&#34;&gt;Exercise 4&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;../../images/java4/8.png&#34; alt=&#34;8&#34;&gt;&lt;/p&gt;
&lt;p&gt;输出：//自己写的 有可能有问题子&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Before a
Before b
Before c
Before d
d: e
d: finally
c: e
c: finally
b: e
b: finally
After b
a: finally
After a
main: finally
&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;p&gt;资料来源，参考：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;陈老师的Java课网站：http://inpluslab.com:8000/java2020/&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;菜鸟教程：https://www.runoob.com/java/java-exceptions.html&lt;/strong&gt;&lt;/p&gt;
- https://wondrouswisdomcard.gitee.io/posts/java4/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>Java - The Learning Experience 5</title>
        <link>https://wondrouswisdomcard.gitee.io/posts/java5/</link>
        <pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate>
        
        <guid>https://wondrouswisdomcard.gitee.io/posts/java5/</guid>
        <description>Wondrous WindomCard&#39;s Blog https://wondrouswisdomcard.gitee.io/posts/java5/ -&lt;h1 id=&#34;thread-线程-i&#34;&gt;Thread 线程 I&lt;/h1&gt;
&lt;p&gt;Concurrent Programming&lt;/p&gt;
&lt;p&gt;Java 给多线程编程提供了内置的支持。&lt;/p&gt;
&lt;p&gt;基本概念：&lt;/p&gt;
&lt;p&gt;线程：指的是进程中一个单一顺序的控制流，&lt;strong&gt;一个进程中可以并发多个线程，每条线程并行执行不同的任务&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;进程：一个进程包括由操作系统分配的内存空间，包含一个或多个线程。一个线程不能独立的存在，它必须是进程的一部分。一个进程一直运行，直到所有的非守护线程都结束运行后才能结束。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;每个线程都是通过某个特定 Thread 对象所对应的方法 run() 来完成其操作的，方法 run() 称为线程体。通过调用 Thread 类的 start() 方法来启动一个线程。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;run 方法运行结束， 此线程终止。然后 CPU 再调度其它线程。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;线程的生命周期&#34;&gt;线程的生命周期&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;../../images/java5/1.jpg&#34; alt=&#34;1&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;新建状态new&#34;&gt;新建状态New:&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;使用 new 关键字和 Thread 类或其子类建立一个线程对象&lt;/strong&gt;后，该线程对象就处于新建状态。它保持这个状态&lt;strong&gt;直到程序 start() 这个线程&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&#34;就绪状态ready&#34;&gt;就绪状态Ready:&lt;/h4&gt;
&lt;p&gt;当线程对象调用了start()方法之后，&lt;strong&gt;该线程就进入就绪状态。就绪状态的线程处于就绪队列中，要等待JVM里线程调度器的调度&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&#34;运行状态running&#34;&gt;运行状态Running:&lt;/h4&gt;
&lt;p&gt;如果就绪状态的线程获取 CPU 资源，就可以执行 run()，此时线程便处于运行状态。处于运行状态的线程最为复杂，它可以变为阻塞状态、就绪状态和死亡状态。&lt;/p&gt;
&lt;h4 id=&#34;阻塞状态waiting&#34;&gt;阻塞状态Waiting:&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;如果一个线程执行了sleep（睡眠）、suspend（挂起）等方法&lt;/strong&gt;，失去所占用资源之后，该线程就从运行状态进入阻塞状态。在&lt;strong&gt;睡眠时间已到或获得设备资源后可以重新进入就绪状态&lt;/strong&gt;。可以分为三种：&lt;/p&gt;
&lt;p&gt;等待阻塞：运行状态中的线程执行 wait() 方法，使线程进入到等待阻塞状态。&lt;/p&gt;
&lt;p&gt;同步阻塞：线程在获取 synchronized &lt;strong&gt;同步锁&lt;/strong&gt;失败(因为同步锁被其他线程占用)。&lt;/p&gt;
&lt;p&gt;其他阻塞：通过调用线程的 sleep() 或 join() 发出了 I/O 请求时，线程就会进入到阻塞状态。当sleep() 状态超时，join() 等待线程终止或超时，或者 I/O 处理完毕，线程重新转入就绪状态。&lt;/p&gt;
&lt;h4 id=&#34;死亡状态dead&#34;&gt;死亡状态Dead:&lt;/h4&gt;
&lt;p&gt;一个运行状态的线程完成任务或者其他终止条件发生时，该线程就切换到终止状态。&lt;/p&gt;
&lt;h3 id=&#34;线程的创建&#34;&gt;线程的创建&lt;/h3&gt;
&lt;p&gt;Java 提供了三种创建线程的方法：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;通过实现 Runnable 接口；&lt;/strong&gt;
&lt;strong&gt;通过继承 Thread 类本身；&lt;/strong&gt;
通过 Callable 和 Future 创建线程。&lt;/p&gt;
&lt;h4 id=&#34;通过runnable接口&#34;&gt;通过Runnable接口&lt;/h4&gt;
&lt;p&gt;为了实现 Runnable，一个类只需要执行一个方法调用run()，run() 可以调用其他方法，使用其他类，并声明变量，就像主线程一样。在创建一个实现 Runnable 接口的类之后，你可以&lt;strong&gt;在类中实例化一个线程对象&lt;/strong&gt;。&lt;/p&gt;
&lt;h4 id=&#34;通过继承thread来创建线程&#34;&gt;通过继承Thread来创建线程&lt;/h4&gt;
&lt;p&gt;该类继承 Thread 类，然后创建一个该类的实例。&lt;/p&gt;
&lt;p&gt;继承类必须重写 run() 方法，&lt;strong&gt;该方法是新线程的入口点&lt;/strong&gt;。它也必须&lt;strong&gt;调用 start() 方法才能执行&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;heading&#34;&gt;&lt;/h3&gt;
&lt;p&gt;参考：https://www.runoob.com/java/java-multithreading.html&lt;/p&gt;
&lt;h4 id=&#34;yield&#34;&gt;Yield&lt;/h4&gt;
&lt;p&gt;public static void yield()&lt;/p&gt;
&lt;p&gt;暂停当前正在执行的线程对象，并执行其他线程。&lt;/p&gt;
&lt;h4 id=&#34;sleep&#34;&gt;Sleep&lt;/h4&gt;
&lt;p&gt;public static void sleep(long millisec)&lt;/p&gt;
&lt;p&gt;在指定的毫秒数内让当前正在执行的线程休眠（暂停执行），此操作受到系统计时器和调度程序精度和准确性的影响。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;让当前的休眠就可以让别的线程在这个时间开始工作，如果sleep时间到了但那个插队的线程还没有做完，他就会继续等待知道插队的线程运行结束。&lt;/em&gt;&lt;/p&gt;
&lt;h4 id=&#34;interrupt&#34;&gt;Interrupt&lt;/h4&gt;
&lt;p&gt;public void interrupt()&lt;/p&gt;
&lt;p&gt;中断线程，An interrupt is an indication to a thread that it should stop what it is doing and do something else.&lt;/p&gt;
&lt;h4 id=&#34;join&#34;&gt;Join&lt;/h4&gt;
&lt;p&gt;public final void join(long millisec)
等待该线程终止的时间最长为 millis 毫秒，The join method allows one thread to wait for the completion of another.&lt;/p&gt;
&lt;p&gt;t.join();
&lt;strong&gt;causes the current thread to pause execution until t&amp;rsquo;s thread terminates.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;join是这样的，插队，让正在运行的那个线程先停下来，直到插队的线程结束后，才让原线程继续运行，如果 join(int a)，表示让这个插队的线程最多运行a秒，如果插队的进程还没结束就强制关掉它，让他在后面等，重新继续原来的线程。如果在a秒内插队的进程就运行结束了，那么就重新继续原来的线程。&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;资料来源，参考：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;陈老师的Java课网站：http://inpluslab.com:8000/java2020/&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;菜鸟教程：https://www.runoob.com/java/java-exceptions.html&lt;/strong&gt;&lt;/p&gt;
- https://wondrouswisdomcard.gitee.io/posts/java5/ - This is a customized copyright.</description>
        </item>
    
    
  </channel>
</rss> 